// Code generated by protoc-gen-go. DO NOT EDIT.
// source: car.proto

package grpcproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterTripRequest struct {
	StartTime            int64    `protobuf:"varint,1,opt,name=startTime,proto3" json:"startTime,omitempty"`
	From                 *Point   `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To                   *Point   `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterTripRequest) Reset()         { *m = RegisterTripRequest{} }
func (m *RegisterTripRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterTripRequest) ProtoMessage()    {}
func (*RegisterTripRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_f1d92ee2a9d1daf2, []int{0}
}
func (m *RegisterTripRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterTripRequest.Unmarshal(m, b)
}
func (m *RegisterTripRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterTripRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterTripRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterTripRequest.Merge(dst, src)
}
func (m *RegisterTripRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterTripRequest.Size(m)
}
func (m *RegisterTripRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterTripRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterTripRequest proto.InternalMessageInfo

func (m *RegisterTripRequest) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *RegisterTripRequest) GetFrom() *Point {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *RegisterTripRequest) GetTo() *Point {
	if m != nil {
		return m.To
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterTripRequest)(nil), "grpcproto.registerTripRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CarClient is the client API for Car service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CarClient interface {
	RegisterTrip(ctx context.Context, in *RegisterTripRequest, opts ...grpc.CallOption) (*Bool, error)
}

type carClient struct {
	cc *grpc.ClientConn
}

func NewCarClient(cc *grpc.ClientConn) CarClient {
	return &carClient{cc}
}

func (c *carClient) RegisterTrip(ctx context.Context, in *RegisterTripRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/registerTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CarServer is the server API for Car service.
type CarServer interface {
	RegisterTrip(context.Context, *RegisterTripRequest) (*Bool, error)
}

func RegisterCarServer(s *grpc.Server, srv CarServer) {
	s.RegisterService(&_Car_serviceDesc, srv)
}

func _Car_RegisterTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).RegisterTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/RegisterTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).RegisterTrip(ctx, req.(*RegisterTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Car_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcproto.car",
	HandlerType: (*CarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "registerTrip",
			Handler:    _Car_RegisterTrip_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "car.proto",
}

func init() { proto.RegisterFile("car.proto", fileDescriptor_car_f1d92ee2a9d1daf2) }

var fileDescriptor_car_f1d92ee2a9d1daf2 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x4e, 0x2c, 0xd2,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x4c, 0x2f, 0x2a, 0x48, 0x06, 0x33, 0xa5, 0xf8, 0xd2,
	0x53, 0xf3, 0x73, 0x53, 0x4b, 0x8a, 0x2a, 0x21, 0x52, 0x52, 0x3c, 0xc9, 0xf9, 0xb9, 0xb9, 0xf9,
	0x79, 0x10, 0x9e, 0x52, 0x35, 0x97, 0x70, 0x51, 0x6a, 0x7a, 0x66, 0x71, 0x49, 0x6a, 0x51, 0x48,
	0x51, 0x66, 0x41, 0x50, 0x6a, 0x61, 0x69, 0x6a, 0x71, 0x89, 0x90, 0x0c, 0x17, 0x67, 0x71, 0x49,
	0x62, 0x51, 0x49, 0x48, 0x66, 0x6e, 0xaa, 0x04, 0xa3, 0x02, 0xa3, 0x06, 0x73, 0x10, 0x42, 0x40,
	0x48, 0x85, 0x8b, 0x25, 0xad, 0x28, 0x3f, 0x57, 0x82, 0x49, 0x81, 0x51, 0x83, 0xdb, 0x48, 0x40,
	0x0f, 0x6e, 0x99, 0x5e, 0x41, 0x7e, 0x66, 0x5e, 0x49, 0x10, 0x58, 0x56, 0x48, 0x81, 0x8b, 0xa9,
	0x24, 0x5f, 0x82, 0x19, 0x87, 0x1a, 0xa6, 0x92, 0x7c, 0x23, 0x37, 0x2e, 0xe6, 0xe4, 0xc4, 0x22,
	0x21, 0x7b, 0x2e, 0x1e, 0x64, 0x37, 0x08, 0xc9, 0x21, 0x29, 0xc6, 0xe2, 0x38, 0x29, 0x7e, 0x24,
	0xf9, 0xa4, 0xfc, 0xfc, 0x9c, 0x24, 0x36, 0x30, 0xdb, 0x18, 0x10, 0x00, 0x00, 0xff, 0xff, 0x79,
	0x96, 0xcc, 0x89, 0x01, 0x01, 0x00, 0x00,
}
