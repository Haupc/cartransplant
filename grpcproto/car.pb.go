// Code generated by protoc-gen-go. DO NOT EDIT.
// source: car.proto

package grpcproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterTripRequest struct {
	CarID                int64    `protobuf:"varint,1,opt,name=carID,proto3" json:"carID,omitempty"`
	BeginLeaveTime       int64    `protobuf:"varint,2,opt,name=beginLeaveTime,proto3" json:"beginLeaveTime,omitempty"`
	EndLeaveTime         int64    `protobuf:"varint,3,opt,name=endLeaveTime,proto3" json:"endLeaveTime,omitempty"`
	From                 *Point   `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To                   *Point   `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	MaxDistance          int32    `protobuf:"varint,6,opt,name=maxDistance,proto3" json:"maxDistance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterTripRequest) Reset()         { *m = RegisterTripRequest{} }
func (m *RegisterTripRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterTripRequest) ProtoMessage()    {}
func (*RegisterTripRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_43c58edf5a9cf3c6, []int{0}
}
func (m *RegisterTripRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterTripRequest.Unmarshal(m, b)
}
func (m *RegisterTripRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterTripRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterTripRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterTripRequest.Merge(dst, src)
}
func (m *RegisterTripRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterTripRequest.Size(m)
}
func (m *RegisterTripRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterTripRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterTripRequest proto.InternalMessageInfo

func (m *RegisterTripRequest) GetCarID() int64 {
	if m != nil {
		return m.CarID
	}
	return 0
}

func (m *RegisterTripRequest) GetBeginLeaveTime() int64 {
	if m != nil {
		return m.BeginLeaveTime
	}
	return 0
}

func (m *RegisterTripRequest) GetEndLeaveTime() int64 {
	if m != nil {
		return m.EndLeaveTime
	}
	return 0
}

func (m *RegisterTripRequest) GetFrom() *Point {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *RegisterTripRequest) GetTo() *Point {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *RegisterTripRequest) GetMaxDistance() int32 {
	if m != nil {
		return m.MaxDistance
	}
	return 0
}

type FindTripRequest struct {
	BeginLeaveTime       int64    `protobuf:"varint,1,opt,name=beginLeaveTime,proto3" json:"beginLeaveTime,omitempty"`
	EndLeaveTime         int64    `protobuf:"varint,2,opt,name=endLeaveTime,proto3" json:"endLeaveTime,omitempty"`
	From                 *Point   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                   *Point   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Option               int32    `protobuf:"varint,5,opt,name=option,proto3" json:"option,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindTripRequest) Reset()         { *m = FindTripRequest{} }
func (m *FindTripRequest) String() string { return proto.CompactTextString(m) }
func (*FindTripRequest) ProtoMessage()    {}
func (*FindTripRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_43c58edf5a9cf3c6, []int{1}
}
func (m *FindTripRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindTripRequest.Unmarshal(m, b)
}
func (m *FindTripRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindTripRequest.Marshal(b, m, deterministic)
}
func (dst *FindTripRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindTripRequest.Merge(dst, src)
}
func (m *FindTripRequest) XXX_Size() int {
	return xxx_messageInfo_FindTripRequest.Size(m)
}
func (m *FindTripRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindTripRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindTripRequest proto.InternalMessageInfo

func (m *FindTripRequest) GetBeginLeaveTime() int64 {
	if m != nil {
		return m.BeginLeaveTime
	}
	return 0
}

func (m *FindTripRequest) GetEndLeaveTime() int64 {
	if m != nil {
		return m.EndLeaveTime
	}
	return 0
}

func (m *FindTripRequest) GetFrom() *Point {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *FindTripRequest) GetTo() *Point {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *FindTripRequest) GetOption() int32 {
	if m != nil {
		return m.Option
	}
	return 0
}

type CarObject struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LicensePlate         string   `protobuf:"bytes,2,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Model                string   `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CarObject) Reset()         { *m = CarObject{} }
func (m *CarObject) String() string { return proto.CompactTextString(m) }
func (*CarObject) ProtoMessage()    {}
func (*CarObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_43c58edf5a9cf3c6, []int{2}
}
func (m *CarObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarObject.Unmarshal(m, b)
}
func (m *CarObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarObject.Marshal(b, m, deterministic)
}
func (dst *CarObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarObject.Merge(dst, src)
}
func (m *CarObject) XXX_Size() int {
	return xxx_messageInfo_CarObject.Size(m)
}
func (m *CarObject) XXX_DiscardUnknown() {
	xxx_messageInfo_CarObject.DiscardUnknown(m)
}

var xxx_messageInfo_CarObject proto.InternalMessageInfo

func (m *CarObject) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CarObject) GetLicensePlate() string {
	if m != nil {
		return m.LicensePlate
	}
	return ""
}

func (m *CarObject) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *CarObject) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

type ListCarResponse struct {
	Cars                 []*CarObject `protobuf:"bytes,1,rep,name=cars,proto3" json:"cars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListCarResponse) Reset()         { *m = ListCarResponse{} }
func (m *ListCarResponse) String() string { return proto.CompactTextString(m) }
func (*ListCarResponse) ProtoMessage()    {}
func (*ListCarResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_43c58edf5a9cf3c6, []int{3}
}
func (m *ListCarResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCarResponse.Unmarshal(m, b)
}
func (m *ListCarResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCarResponse.Marshal(b, m, deterministic)
}
func (dst *ListCarResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCarResponse.Merge(dst, src)
}
func (m *ListCarResponse) XXX_Size() int {
	return xxx_messageInfo_ListCarResponse.Size(m)
}
func (m *ListCarResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCarResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCarResponse proto.InternalMessageInfo

func (m *ListCarResponse) GetCars() []*CarObject {
	if m != nil {
		return m.Cars
	}
	return nil
}

func init() {
	proto.RegisterType((*RegisterTripRequest)(nil), "grpcproto.registerTripRequest")
	proto.RegisterType((*FindTripRequest)(nil), "grpcproto.findTripRequest")
	proto.RegisterType((*CarObject)(nil), "grpcproto.carObject")
	proto.RegisterType((*ListCarResponse)(nil), "grpcproto.listCarResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CarClient is the client API for Car service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CarClient interface {
	// driver
	RegisterTrip(ctx context.Context, in *RegisterTripRequest, opts ...grpc.CallOption) (*Bool, error)
	RegisterCar(ctx context.Context, in *CarObject, opts ...grpc.CallOption) (*Bool, error)
	ListMyCar(ctx context.Context, in *Int, opts ...grpc.CallOption) (*ListCarResponse, error)
	UpdateCar(ctx context.Context, in *CarObject, opts ...grpc.CallOption) (*Bool, error)
	DeleteCar(ctx context.Context, in *Int, opts ...grpc.CallOption) (*Bool, error)
	// user
	FindTrip(ctx context.Context, in *FindTripRequest, opts ...grpc.CallOption) (*JsonResponse, error)
}

type carClient struct {
	cc *grpc.ClientConn
}

func NewCarClient(cc *grpc.ClientConn) CarClient {
	return &carClient{cc}
}

func (c *carClient) RegisterTrip(ctx context.Context, in *RegisterTripRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/registerTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) RegisterCar(ctx context.Context, in *CarObject, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/registerCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) ListMyCar(ctx context.Context, in *Int, opts ...grpc.CallOption) (*ListCarResponse, error) {
	out := new(ListCarResponse)
	err := c.cc.Invoke(ctx, "/grpcproto.car/listMyCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) UpdateCar(ctx context.Context, in *CarObject, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/updateCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) DeleteCar(ctx context.Context, in *Int, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/deleteCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) FindTrip(ctx context.Context, in *FindTripRequest, opts ...grpc.CallOption) (*JsonResponse, error) {
	out := new(JsonResponse)
	err := c.cc.Invoke(ctx, "/grpcproto.car/findTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CarServer is the server API for Car service.
type CarServer interface {
	// driver
	RegisterTrip(context.Context, *RegisterTripRequest) (*Bool, error)
	RegisterCar(context.Context, *CarObject) (*Bool, error)
	ListMyCar(context.Context, *Int) (*ListCarResponse, error)
	UpdateCar(context.Context, *CarObject) (*Bool, error)
	DeleteCar(context.Context, *Int) (*Bool, error)
	// user
	FindTrip(context.Context, *FindTripRequest) (*JsonResponse, error)
}

func RegisterCarServer(s *grpc.Server, srv CarServer) {
	s.RegisterService(&_Car_serviceDesc, srv)
}

func _Car_RegisterTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).RegisterTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/RegisterTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).RegisterTrip(ctx, req.(*RegisterTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_RegisterCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).RegisterCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/RegisterCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).RegisterCar(ctx, req.(*CarObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_ListMyCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).ListMyCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/ListMyCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).ListMyCar(ctx, req.(*Int))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_UpdateCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).UpdateCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/UpdateCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).UpdateCar(ctx, req.(*CarObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_DeleteCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).DeleteCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/DeleteCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).DeleteCar(ctx, req.(*Int))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_FindTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).FindTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/FindTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).FindTrip(ctx, req.(*FindTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Car_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcproto.car",
	HandlerType: (*CarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "registerTrip",
			Handler:    _Car_RegisterTrip_Handler,
		},
		{
			MethodName: "registerCar",
			Handler:    _Car_RegisterCar_Handler,
		},
		{
			MethodName: "listMyCar",
			Handler:    _Car_ListMyCar_Handler,
		},
		{
			MethodName: "updateCar",
			Handler:    _Car_UpdateCar_Handler,
		},
		{
			MethodName: "deleteCar",
			Handler:    _Car_DeleteCar_Handler,
		},
		{
			MethodName: "findTrip",
			Handler:    _Car_FindTrip_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "car.proto",
}

func init() { proto.RegisterFile("car.proto", fileDescriptor_car_43c58edf5a9cf3c6) }

var fileDescriptor_car_43c58edf5a9cf3c6 = []byte{
	// 437 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x52, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0x96, 0xed, 0x38, 0xc2, 0x93, 0x28, 0x41, 0x4b, 0x05, 0x96, 0x0f, 0xc8, 0xb2, 0x10, 0xf2,
	0x01, 0xe5, 0x10, 0x90, 0x38, 0x70, 0xe8, 0xa1, 0xbd, 0x20, 0x81, 0x40, 0xab, 0xbe, 0xc0, 0x66,
	0x3d, 0x8d, 0xb6, 0xd8, 0x3b, 0x66, 0x77, 0x8b, 0xe8, 0xc3, 0xf1, 0x1e, 0x5c, 0x79, 0x13, 0x94,
	0x35, 0x29, 0x5b, 0xa7, 0x54, 0xe1, 0xb6, 0xdf, 0xcf, 0x68, 0xbe, 0x4f, 0x3b, 0x90, 0x49, 0x61,
	0x56, 0xbd, 0x21, 0x47, 0x2c, 0xdb, 0x9a, 0x5e, 0xfa, 0x67, 0xb1, 0xd8, 0x22, 0x75, 0xe8, 0xcc,
	0xcd, 0x20, 0x15, 0x73, 0x49, 0x5d, 0x47, 0x7a, 0x40, 0xd5, 0xaf, 0x08, 0x9e, 0x18, 0xdc, 0x2a,
	0xeb, 0xd0, 0x5c, 0x18, 0xd5, 0x73, 0xfc, 0x7a, 0x8d, 0xd6, 0xb1, 0x13, 0x48, 0xa5, 0x30, 0xef,
	0xcf, 0xf3, 0xa8, 0x8c, 0xea, 0x84, 0x0f, 0x80, 0xbd, 0x84, 0xc5, 0x06, 0xb7, 0x4a, 0x7f, 0x40,
	0xf1, 0x0d, 0x2f, 0x54, 0x87, 0x79, 0xec, 0xe5, 0x11, 0xcb, 0x2a, 0x98, 0xa3, 0x6e, 0xfe, 0xba,
	0x12, 0xef, 0xba, 0xc3, 0xb1, 0x17, 0x30, 0xb9, 0x34, 0xd4, 0xe5, 0x93, 0x32, 0xaa, 0x67, 0xeb,
	0xc7, 0xab, 0xdb, 0xc4, 0xab, 0x9e, 0x94, 0x76, 0xdc, 0xab, 0xac, 0x84, 0xd8, 0x51, 0x9e, 0xfe,
	0xc3, 0x13, 0x3b, 0x62, 0x25, 0xcc, 0x3a, 0xf1, 0xfd, 0x5c, 0x59, 0x27, 0xb4, 0xc4, 0x7c, 0x5a,
	0x46, 0x75, 0xca, 0x43, 0xaa, 0xfa, 0x11, 0xc1, 0xf2, 0x52, 0xe9, 0x26, 0xec, 0x77, 0xd8, 0x24,
	0x3a, 0xaa, 0x49, 0xfc, 0x40, 0x93, 0xe4, 0x88, 0x26, 0x93, 0x07, 0x9a, 0x3c, 0x85, 0x29, 0xf5,
	0x4e, 0x91, 0xf6, 0x7d, 0x53, 0xfe, 0x07, 0x55, 0x5f, 0xfc, 0xcf, 0x7e, 0xda, 0x5c, 0xa1, 0x74,
	0x6c, 0x01, 0xb1, 0x6a, 0x7c, 0xd8, 0x94, 0xc7, 0xaa, 0xd9, 0x05, 0x6c, 0x95, 0x44, 0x6d, 0xf1,
	0x73, 0x2b, 0xdc, 0x10, 0x30, 0xe3, 0x77, 0x38, 0xff, 0x99, 0xd4, 0x92, 0xf1, 0x09, 0x33, 0x3e,
	0x80, 0x1d, 0xdb, 0x51, 0x83, 0xad, 0xcf, 0x94, 0xf1, 0x01, 0x54, 0xef, 0x60, 0xd9, 0x2a, 0xeb,
	0xce, 0x84, 0xe1, 0x68, 0x7b, 0xd2, 0x16, 0x59, 0x0d, 0x13, 0x29, 0x8c, 0xcd, 0xa3, 0x32, 0xa9,
	0x67, 0xeb, 0x93, 0x20, 0xfb, 0x6d, 0x2c, 0xee, 0x1d, 0xeb, 0x9f, 0x31, 0x24, 0x52, 0x18, 0x76,
	0x0a, 0xf3, 0xf0, 0xa8, 0xd8, 0xf3, 0x60, 0xe6, 0x9e, 0x6b, 0x2b, 0x96, 0x81, 0xbe, 0x21, 0x6a,
	0xd9, 0x1b, 0x98, 0xed, 0x7d, 0x67, 0xc2, 0xb0, 0x7b, 0x77, 0x1e, 0x4e, 0xbd, 0x85, 0x6c, 0x97,
	0xfd, 0xe3, 0xcd, 0x6e, 0x66, 0x11, 0xa8, 0x4a, 0xbb, 0xa2, 0x08, 0xf0, 0xb8, 0xe1, 0x1a, 0xb2,
	0xeb, 0xbe, 0x11, 0x0e, 0xff, 0x63, 0xd9, 0x2b, 0xc8, 0x1a, 0x6c, 0x71, 0x98, 0x19, 0x2f, 0x3b,
	0x70, 0x9f, 0xc2, 0xa3, 0xfd, 0x09, 0xb2, 0x30, 0xc9, 0xe8, 0x2e, 0x8b, 0x67, 0x81, 0x76, 0x65,
	0x49, 0xef, 0x23, 0x6e, 0xa6, 0x9e, 0x7b, 0xfd, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x45, 0xec, 0x3e,
	0x20, 0xe5, 0x03, 0x00, 0x00,
}
