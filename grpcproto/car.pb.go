// Code generated by protoc-gen-go. DO NOT EDIT.
// source: car.proto

package grpcproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RegisterTripRequest struct {
	CarID                int64    `protobuf:"varint,1,opt,name=carID,proto3" json:"carID,omitempty"`
	BeginLeaveTime       int64    `protobuf:"varint,2,opt,name=beginLeaveTime,proto3" json:"beginLeaveTime,omitempty"`
	EndLeaveTime         int64    `protobuf:"varint,3,opt,name=endLeaveTime,proto3" json:"endLeaveTime,omitempty"`
	From                 *Point   `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To                   *Point   `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	MaxDistance          float32  `protobuf:"fixed32,6,opt,name=maxDistance,proto3" json:"maxDistance,omitempty"`
	FeeEachKm            int64    `protobuf:"varint,7,opt,name=feeEachKm,proto3" json:"feeEachKm,omitempty"`
	Seat                 int32    `protobuf:"varint,8,opt,name=seat,proto3" json:"seat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterTripRequest) Reset()         { *m = RegisterTripRequest{} }
func (m *RegisterTripRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterTripRequest) ProtoMessage()    {}
func (*RegisterTripRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{0}
}
func (m *RegisterTripRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterTripRequest.Unmarshal(m, b)
}
func (m *RegisterTripRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterTripRequest.Marshal(b, m, deterministic)
}
func (dst *RegisterTripRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterTripRequest.Merge(dst, src)
}
func (m *RegisterTripRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterTripRequest.Size(m)
}
func (m *RegisterTripRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterTripRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterTripRequest proto.InternalMessageInfo

func (m *RegisterTripRequest) GetCarID() int64 {
	if m != nil {
		return m.CarID
	}
	return 0
}

func (m *RegisterTripRequest) GetBeginLeaveTime() int64 {
	if m != nil {
		return m.BeginLeaveTime
	}
	return 0
}

func (m *RegisterTripRequest) GetEndLeaveTime() int64 {
	if m != nil {
		return m.EndLeaveTime
	}
	return 0
}

func (m *RegisterTripRequest) GetFrom() *Point {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *RegisterTripRequest) GetTo() *Point {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *RegisterTripRequest) GetMaxDistance() float32 {
	if m != nil {
		return m.MaxDistance
	}
	return 0
}

func (m *RegisterTripRequest) GetFeeEachKm() int64 {
	if m != nil {
		return m.FeeEachKm
	}
	return 0
}

func (m *RegisterTripRequest) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

type FindTripRequest struct {
	BeginLeaveTime       int64    `protobuf:"varint,1,opt,name=beginLeaveTime,proto3" json:"beginLeaveTime,omitempty"`
	EndLeaveTime         int64    `protobuf:"varint,2,opt,name=endLeaveTime,proto3" json:"endLeaveTime,omitempty"`
	From                 *Point   `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`
	To                   *Point   `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`
	Type                 int32    `protobuf:"varint,5,opt,name=type,proto3" json:"type,omitempty"`
	Seat                 int32    `protobuf:"varint,6,opt,name=seat,proto3" json:"seat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindTripRequest) Reset()         { *m = FindTripRequest{} }
func (m *FindTripRequest) String() string { return proto.CompactTextString(m) }
func (*FindTripRequest) ProtoMessage()    {}
func (*FindTripRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{1}
}
func (m *FindTripRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindTripRequest.Unmarshal(m, b)
}
func (m *FindTripRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindTripRequest.Marshal(b, m, deterministic)
}
func (dst *FindTripRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindTripRequest.Merge(dst, src)
}
func (m *FindTripRequest) XXX_Size() int {
	return xxx_messageInfo_FindTripRequest.Size(m)
}
func (m *FindTripRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindTripRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindTripRequest proto.InternalMessageInfo

func (m *FindTripRequest) GetBeginLeaveTime() int64 {
	if m != nil {
		return m.BeginLeaveTime
	}
	return 0
}

func (m *FindTripRequest) GetEndLeaveTime() int64 {
	if m != nil {
		return m.EndLeaveTime
	}
	return 0
}

func (m *FindTripRequest) GetFrom() *Point {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *FindTripRequest) GetTo() *Point {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *FindTripRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *FindTripRequest) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

type CarObject struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	LicensePlate         string   `protobuf:"bytes,2,opt,name=licensePlate,proto3" json:"licensePlate,omitempty"`
	Color                string   `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Model                string   `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`
	VehicleBrand         string   `protobuf:"bytes,5,opt,name=vehicleBrand,proto3" json:"vehicleBrand,omitempty"`
	Seat                 int32    `protobuf:"varint,6,opt,name=seat,proto3" json:"seat,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CarObject) Reset()         { *m = CarObject{} }
func (m *CarObject) String() string { return proto.CompactTextString(m) }
func (*CarObject) ProtoMessage()    {}
func (*CarObject) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{2}
}
func (m *CarObject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CarObject.Unmarshal(m, b)
}
func (m *CarObject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CarObject.Marshal(b, m, deterministic)
}
func (dst *CarObject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CarObject.Merge(dst, src)
}
func (m *CarObject) XXX_Size() int {
	return xxx_messageInfo_CarObject.Size(m)
}
func (m *CarObject) XXX_DiscardUnknown() {
	xxx_messageInfo_CarObject.DiscardUnknown(m)
}

var xxx_messageInfo_CarObject proto.InternalMessageInfo

func (m *CarObject) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *CarObject) GetLicensePlate() string {
	if m != nil {
		return m.LicensePlate
	}
	return ""
}

func (m *CarObject) GetColor() string {
	if m != nil {
		return m.Color
	}
	return ""
}

func (m *CarObject) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *CarObject) GetVehicleBrand() string {
	if m != nil {
		return m.VehicleBrand
	}
	return ""
}

func (m *CarObject) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

type ListCarResponse struct {
	Cars                 []*CarObject `protobuf:"bytes,1,rep,name=cars,proto3" json:"cars,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ListCarResponse) Reset()         { *m = ListCarResponse{} }
func (m *ListCarResponse) String() string { return proto.CompactTextString(m) }
func (*ListCarResponse) ProtoMessage()    {}
func (*ListCarResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{3}
}
func (m *ListCarResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListCarResponse.Unmarshal(m, b)
}
func (m *ListCarResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListCarResponse.Marshal(b, m, deterministic)
}
func (dst *ListCarResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListCarResponse.Merge(dst, src)
}
func (m *ListCarResponse) XXX_Size() int {
	return xxx_messageInfo_ListCarResponse.Size(m)
}
func (m *ListCarResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListCarResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListCarResponse proto.InternalMessageInfo

func (m *ListCarResponse) GetCars() []*CarObject {
	if m != nil {
		return m.Cars
	}
	return nil
}

type TakeTripRequest struct {
	DriverTripID         int32    `protobuf:"varint,1,opt,name=driverTripID,proto3" json:"driverTripID,omitempty"`
	BeginLeaveTime       int64    `protobuf:"varint,2,opt,name=beginLeaveTime,proto3" json:"beginLeaveTime,omitempty"`
	EndLeaveTime         int64    `protobuf:"varint,3,opt,name=endLeaveTime,proto3" json:"endLeaveTime,omitempty"`
	From                 *Point   `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To                   *Point   `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	Seat                 int32    `protobuf:"varint,6,opt,name=seat,proto3" json:"seat,omitempty"`
	Type                 int32    `protobuf:"varint,7,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TakeTripRequest) Reset()         { *m = TakeTripRequest{} }
func (m *TakeTripRequest) String() string { return proto.CompactTextString(m) }
func (*TakeTripRequest) ProtoMessage()    {}
func (*TakeTripRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{4}
}
func (m *TakeTripRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TakeTripRequest.Unmarshal(m, b)
}
func (m *TakeTripRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TakeTripRequest.Marshal(b, m, deterministic)
}
func (dst *TakeTripRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TakeTripRequest.Merge(dst, src)
}
func (m *TakeTripRequest) XXX_Size() int {
	return xxx_messageInfo_TakeTripRequest.Size(m)
}
func (m *TakeTripRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TakeTripRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TakeTripRequest proto.InternalMessageInfo

func (m *TakeTripRequest) GetDriverTripID() int32 {
	if m != nil {
		return m.DriverTripID
	}
	return 0
}

func (m *TakeTripRequest) GetBeginLeaveTime() int64 {
	if m != nil {
		return m.BeginLeaveTime
	}
	return 0
}

func (m *TakeTripRequest) GetEndLeaveTime() int64 {
	if m != nil {
		return m.EndLeaveTime
	}
	return 0
}

func (m *TakeTripRequest) GetFrom() *Point {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *TakeTripRequest) GetTo() *Point {
	if m != nil {
		return m.To
	}
	return nil
}

func (m *TakeTripRequest) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *TakeTripRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type UserTrip struct {
	Id                   int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BeginLeaveTime       int64        `protobuf:"varint,2,opt,name=beginLeaveTime,proto3" json:"beginLeaveTime,omitempty"`
	EndLeaveTime         int64        `protobuf:"varint,3,opt,name=endLeaveTime,proto3" json:"endLeaveTime,omitempty"`
	From                 string       `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To                   string       `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	State                int32        `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	Driver               *UserProfile `protobuf:"bytes,7,opt,name=driver,proto3" json:"driver,omitempty"`
	Car                  *CarObject   `protobuf:"bytes,8,opt,name=car,proto3" json:"car,omitempty"`
	Price                int64        `protobuf:"varint,9,opt,name=price,proto3" json:"price,omitempty"`
	Distance             float32      `protobuf:"fixed32,10,opt,name=distance,proto3" json:"distance,omitempty"`
	User                 *UserProfile `protobuf:"bytes,11,opt,name=user,proto3" json:"user,omitempty"`
	Duration             float32      `protobuf:"fixed32,12,opt,name=duration,proto3" json:"duration,omitempty"`
	Type                 int32        `protobuf:"varint,13,opt,name=type,proto3" json:"type,omitempty"`
	Seat                 int32        `protobuf:"varint,14,opt,name=seat,proto3" json:"seat,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *UserTrip) Reset()         { *m = UserTrip{} }
func (m *UserTrip) String() string { return proto.CompactTextString(m) }
func (*UserTrip) ProtoMessage()    {}
func (*UserTrip) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{5}
}
func (m *UserTrip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserTrip.Unmarshal(m, b)
}
func (m *UserTrip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserTrip.Marshal(b, m, deterministic)
}
func (dst *UserTrip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserTrip.Merge(dst, src)
}
func (m *UserTrip) XXX_Size() int {
	return xxx_messageInfo_UserTrip.Size(m)
}
func (m *UserTrip) XXX_DiscardUnknown() {
	xxx_messageInfo_UserTrip.DiscardUnknown(m)
}

var xxx_messageInfo_UserTrip proto.InternalMessageInfo

func (m *UserTrip) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UserTrip) GetBeginLeaveTime() int64 {
	if m != nil {
		return m.BeginLeaveTime
	}
	return 0
}

func (m *UserTrip) GetEndLeaveTime() int64 {
	if m != nil {
		return m.EndLeaveTime
	}
	return 0
}

func (m *UserTrip) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *UserTrip) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *UserTrip) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *UserTrip) GetDriver() *UserProfile {
	if m != nil {
		return m.Driver
	}
	return nil
}

func (m *UserTrip) GetCar() *CarObject {
	if m != nil {
		return m.Car
	}
	return nil
}

func (m *UserTrip) GetPrice() int64 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *UserTrip) GetDistance() float32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *UserTrip) GetUser() *UserProfile {
	if m != nil {
		return m.User
	}
	return nil
}

func (m *UserTrip) GetDuration() float32 {
	if m != nil {
		return m.Duration
	}
	return 0
}

func (m *UserTrip) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *UserTrip) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

type ListUserTripResponse struct {
	UserTrip             []*UserTrip `protobuf:"bytes,1,rep,name=userTrip,proto3" json:"userTrip,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListUserTripResponse) Reset()         { *m = ListUserTripResponse{} }
func (m *ListUserTripResponse) String() string { return proto.CompactTextString(m) }
func (*ListUserTripResponse) ProtoMessage()    {}
func (*ListUserTripResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{6}
}
func (m *ListUserTripResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListUserTripResponse.Unmarshal(m, b)
}
func (m *ListUserTripResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListUserTripResponse.Marshal(b, m, deterministic)
}
func (dst *ListUserTripResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListUserTripResponse.Merge(dst, src)
}
func (m *ListUserTripResponse) XXX_Size() int {
	return xxx_messageInfo_ListUserTripResponse.Size(m)
}
func (m *ListUserTripResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListUserTripResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListUserTripResponse proto.InternalMessageInfo

func (m *ListUserTripResponse) GetUserTrip() []*UserTrip {
	if m != nil {
		return m.UserTrip
	}
	return nil
}

type DeleteCarRequest struct {
	Ids                  []int32  `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteCarRequest) Reset()         { *m = DeleteCarRequest{} }
func (m *DeleteCarRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteCarRequest) ProtoMessage()    {}
func (*DeleteCarRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{7}
}
func (m *DeleteCarRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteCarRequest.Unmarshal(m, b)
}
func (m *DeleteCarRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteCarRequest.Marshal(b, m, deterministic)
}
func (dst *DeleteCarRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteCarRequest.Merge(dst, src)
}
func (m *DeleteCarRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteCarRequest.Size(m)
}
func (m *DeleteCarRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteCarRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteCarRequest proto.InternalMessageInfo

func (m *DeleteCarRequest) GetIds() []int32 {
	if m != nil {
		return m.Ids
	}
	return nil
}

type DriverTrip struct {
	UserTrips            []*UserTrip `protobuf:"bytes,1,rep,name=userTrips,proto3" json:"userTrips,omitempty"`
	BeginLeaveTime       int64       `protobuf:"varint,2,opt,name=beginLeaveTime,proto3" json:"beginLeaveTime,omitempty"`
	EndLeaveTime         int64       `protobuf:"varint,3,opt,name=endLeaveTime,proto3" json:"endLeaveTime,omitempty"`
	From                 string      `protobuf:"bytes,4,opt,name=from,proto3" json:"from,omitempty"`
	To                   string      `protobuf:"bytes,5,opt,name=to,proto3" json:"to,omitempty"`
	State                int32       `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	TotalSeat            int32       `protobuf:"varint,7,opt,name=totalSeat,proto3" json:"totalSeat,omitempty"`
	ReamaingSeat         int32       `protobuf:"varint,8,opt,name=reamaingSeat,proto3" json:"reamaingSeat,omitempty"`
	Car                  *CarObject  `protobuf:"bytes,9,opt,name=car,proto3" json:"car,omitempty"`
	PriceEachKm          int32       `protobuf:"varint,10,opt,name=priceEachKm,proto3" json:"priceEachKm,omitempty"`
	TotalUserTrip        int32       `protobuf:"varint,12,opt,name=totalUserTrip,proto3" json:"totalUserTrip,omitempty"`
	TotalIncome          int64       `protobuf:"varint,13,opt,name=totalIncome,proto3" json:"totalIncome,omitempty"`
	Distance             float32     `protobuf:"fixed32,14,opt,name=distance,proto3" json:"distance,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *DriverTrip) Reset()         { *m = DriverTrip{} }
func (m *DriverTrip) String() string { return proto.CompactTextString(m) }
func (*DriverTrip) ProtoMessage()    {}
func (*DriverTrip) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{8}
}
func (m *DriverTrip) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriverTrip.Unmarshal(m, b)
}
func (m *DriverTrip) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriverTrip.Marshal(b, m, deterministic)
}
func (dst *DriverTrip) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriverTrip.Merge(dst, src)
}
func (m *DriverTrip) XXX_Size() int {
	return xxx_messageInfo_DriverTrip.Size(m)
}
func (m *DriverTrip) XXX_DiscardUnknown() {
	xxx_messageInfo_DriverTrip.DiscardUnknown(m)
}

var xxx_messageInfo_DriverTrip proto.InternalMessageInfo

func (m *DriverTrip) GetUserTrips() []*UserTrip {
	if m != nil {
		return m.UserTrips
	}
	return nil
}

func (m *DriverTrip) GetBeginLeaveTime() int64 {
	if m != nil {
		return m.BeginLeaveTime
	}
	return 0
}

func (m *DriverTrip) GetEndLeaveTime() int64 {
	if m != nil {
		return m.EndLeaveTime
	}
	return 0
}

func (m *DriverTrip) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *DriverTrip) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *DriverTrip) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *DriverTrip) GetTotalSeat() int32 {
	if m != nil {
		return m.TotalSeat
	}
	return 0
}

func (m *DriverTrip) GetReamaingSeat() int32 {
	if m != nil {
		return m.ReamaingSeat
	}
	return 0
}

func (m *DriverTrip) GetCar() *CarObject {
	if m != nil {
		return m.Car
	}
	return nil
}

func (m *DriverTrip) GetPriceEachKm() int32 {
	if m != nil {
		return m.PriceEachKm
	}
	return 0
}

func (m *DriverTrip) GetTotalUserTrip() int32 {
	if m != nil {
		return m.TotalUserTrip
	}
	return 0
}

func (m *DriverTrip) GetTotalIncome() int64 {
	if m != nil {
		return m.TotalIncome
	}
	return 0
}

func (m *DriverTrip) GetDistance() float32 {
	if m != nil {
		return m.Distance
	}
	return 0
}

type ListDriverTripResponse struct {
	Trips                []*DriverTrip `protobuf:"bytes,1,rep,name=trips,proto3" json:"trips,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ListDriverTripResponse) Reset()         { *m = ListDriverTripResponse{} }
func (m *ListDriverTripResponse) String() string { return proto.CompactTextString(m) }
func (*ListDriverTripResponse) ProtoMessage()    {}
func (*ListDriverTripResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{9}
}
func (m *ListDriverTripResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDriverTripResponse.Unmarshal(m, b)
}
func (m *ListDriverTripResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDriverTripResponse.Marshal(b, m, deterministic)
}
func (dst *ListDriverTripResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDriverTripResponse.Merge(dst, src)
}
func (m *ListDriverTripResponse) XXX_Size() int {
	return xxx_messageInfo_ListDriverTripResponse.Size(m)
}
func (m *ListDriverTripResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDriverTripResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDriverTripResponse proto.InternalMessageInfo

func (m *ListDriverTripResponse) GetTrips() []*DriverTrip {
	if m != nil {
		return m.Trips
	}
	return nil
}

type ListDriverTripRequest struct {
	State                int32    `protobuf:"varint,1,opt,name=state,proto3" json:"state,omitempty"`
	StartDate            int32    `protobuf:"varint,2,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate              int32    `protobuf:"varint,3,opt,name=endDate,proto3" json:"endDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDriverTripRequest) Reset()         { *m = ListDriverTripRequest{} }
func (m *ListDriverTripRequest) String() string { return proto.CompactTextString(m) }
func (*ListDriverTripRequest) ProtoMessage()    {}
func (*ListDriverTripRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{10}
}
func (m *ListDriverTripRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDriverTripRequest.Unmarshal(m, b)
}
func (m *ListDriverTripRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDriverTripRequest.Marshal(b, m, deterministic)
}
func (dst *ListDriverTripRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDriverTripRequest.Merge(dst, src)
}
func (m *ListDriverTripRequest) XXX_Size() int {
	return xxx_messageInfo_ListDriverTripRequest.Size(m)
}
func (m *ListDriverTripRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDriverTripRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDriverTripRequest proto.InternalMessageInfo

func (m *ListDriverTripRequest) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ListDriverTripRequest) GetStartDate() int32 {
	if m != nil {
		return m.StartDate
	}
	return 0
}

func (m *ListDriverTripRequest) GetEndDate() int32 {
	if m != nil {
		return m.EndDate
	}
	return 0
}

type FindPendingTripRequest struct {
	Seat                 int32    `protobuf:"varint,1,opt,name=seat,proto3" json:"seat,omitempty"`
	Type                 int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	Latitude             string   `protobuf:"bytes,3,opt,name=latitude,proto3" json:"latitude,omitempty"`
	Longitude            string   `protobuf:"bytes,4,opt,name=longitude,proto3" json:"longitude,omitempty"`
	Radius               float32  `protobuf:"fixed32,5,opt,name=radius,proto3" json:"radius,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindPendingTripRequest) Reset()         { *m = FindPendingTripRequest{} }
func (m *FindPendingTripRequest) String() string { return proto.CompactTextString(m) }
func (*FindPendingTripRequest) ProtoMessage()    {}
func (*FindPendingTripRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{11}
}
func (m *FindPendingTripRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindPendingTripRequest.Unmarshal(m, b)
}
func (m *FindPendingTripRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindPendingTripRequest.Marshal(b, m, deterministic)
}
func (dst *FindPendingTripRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindPendingTripRequest.Merge(dst, src)
}
func (m *FindPendingTripRequest) XXX_Size() int {
	return xxx_messageInfo_FindPendingTripRequest.Size(m)
}
func (m *FindPendingTripRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindPendingTripRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindPendingTripRequest proto.InternalMessageInfo

func (m *FindPendingTripRequest) GetSeat() int32 {
	if m != nil {
		return m.Seat
	}
	return 0
}

func (m *FindPendingTripRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *FindPendingTripRequest) GetLatitude() string {
	if m != nil {
		return m.Latitude
	}
	return ""
}

func (m *FindPendingTripRequest) GetLongitude() string {
	if m != nil {
		return m.Longitude
	}
	return ""
}

func (m *FindPendingTripRequest) GetRadius() float32 {
	if m != nil {
		return m.Radius
	}
	return 0
}

type DriverTakeTripRequest struct {
	RemainingSeat        int32    `protobuf:"varint,1,opt,name=remainingSeat,proto3" json:"remainingSeat,omitempty"`
	PriceEachKm          int32    `protobuf:"varint,2,opt,name=priceEachKm,proto3" json:"priceEachKm,omitempty"`
	UserTripID           int32    `protobuf:"varint,3,opt,name=userTripID,proto3" json:"userTripID,omitempty"`
	UserTripPrice        int32    `protobuf:"varint,4,opt,name=userTripPrice,proto3" json:"userTripPrice,omitempty"`
	MaxDistance          float32  `protobuf:"fixed32,5,opt,name=maxDistance,proto3" json:"maxDistance,omitempty"`
	CarID                int32    `protobuf:"varint,6,opt,name=carID,proto3" json:"carID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DriverTakeTripRequest) Reset()         { *m = DriverTakeTripRequest{} }
func (m *DriverTakeTripRequest) String() string { return proto.CompactTextString(m) }
func (*DriverTakeTripRequest) ProtoMessage()    {}
func (*DriverTakeTripRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_car_4333042923ea9a97, []int{12}
}
func (m *DriverTakeTripRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DriverTakeTripRequest.Unmarshal(m, b)
}
func (m *DriverTakeTripRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DriverTakeTripRequest.Marshal(b, m, deterministic)
}
func (dst *DriverTakeTripRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DriverTakeTripRequest.Merge(dst, src)
}
func (m *DriverTakeTripRequest) XXX_Size() int {
	return xxx_messageInfo_DriverTakeTripRequest.Size(m)
}
func (m *DriverTakeTripRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DriverTakeTripRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DriverTakeTripRequest proto.InternalMessageInfo

func (m *DriverTakeTripRequest) GetRemainingSeat() int32 {
	if m != nil {
		return m.RemainingSeat
	}
	return 0
}

func (m *DriverTakeTripRequest) GetPriceEachKm() int32 {
	if m != nil {
		return m.PriceEachKm
	}
	return 0
}

func (m *DriverTakeTripRequest) GetUserTripID() int32 {
	if m != nil {
		return m.UserTripID
	}
	return 0
}

func (m *DriverTakeTripRequest) GetUserTripPrice() int32 {
	if m != nil {
		return m.UserTripPrice
	}
	return 0
}

func (m *DriverTakeTripRequest) GetMaxDistance() float32 {
	if m != nil {
		return m.MaxDistance
	}
	return 0
}

func (m *DriverTakeTripRequest) GetCarID() int32 {
	if m != nil {
		return m.CarID
	}
	return 0
}

func init() {
	proto.RegisterType((*RegisterTripRequest)(nil), "grpcproto.registerTripRequest")
	proto.RegisterType((*FindTripRequest)(nil), "grpcproto.findTripRequest")
	proto.RegisterType((*CarObject)(nil), "grpcproto.carObject")
	proto.RegisterType((*ListCarResponse)(nil), "grpcproto.listCarResponse")
	proto.RegisterType((*TakeTripRequest)(nil), "grpcproto.takeTripRequest")
	proto.RegisterType((*UserTrip)(nil), "grpcproto.userTrip")
	proto.RegisterType((*ListUserTripResponse)(nil), "grpcproto.listUserTripResponse")
	proto.RegisterType((*DeleteCarRequest)(nil), "grpcproto.deleteCarRequest")
	proto.RegisterType((*DriverTrip)(nil), "grpcproto.driverTrip")
	proto.RegisterType((*ListDriverTripResponse)(nil), "grpcproto.listDriverTripResponse")
	proto.RegisterType((*ListDriverTripRequest)(nil), "grpcproto.listDriverTripRequest")
	proto.RegisterType((*FindPendingTripRequest)(nil), "grpcproto.findPendingTripRequest")
	proto.RegisterType((*DriverTakeTripRequest)(nil), "grpcproto.driverTakeTripRequest")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CarClient is the client API for Car service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CarClient interface {
	// driver
	RegisterTrip(ctx context.Context, in *RegisterTripRequest, opts ...grpc.CallOption) (*Bool, error)
	RegisterCar(ctx context.Context, in *CarObject, opts ...grpc.CallOption) (*Bool, error)
	ListMyCar(ctx context.Context, in *Int, opts ...grpc.CallOption) (*ListCarResponse, error)
	UpdateCar(ctx context.Context, in *CarObject, opts ...grpc.CallOption) (*Bool, error)
	DeleteCar(ctx context.Context, in *DeleteCarRequest, opts ...grpc.CallOption) (*Bool, error)
	ListDriverTrip(ctx context.Context, in *ListDriverTripRequest, opts ...grpc.CallOption) (*ListDriverTripResponse, error)
	FindPendingTrip(ctx context.Context, in *FindPendingTripRequest, opts ...grpc.CallOption) (*ListUserTripResponse, error)
	DriverTakeTrip(ctx context.Context, in *DriverTakeTripRequest, opts ...grpc.CallOption) (*Bool, error)
	MarkUserTripDone(ctx context.Context, in *Int, opts ...grpc.CallOption) (*Bool, error)
	// user
	FindTrip(ctx context.Context, in *FindTripRequest, opts ...grpc.CallOption) (*JsonResponse, error)
	TakeTrip(ctx context.Context, in *TakeTripRequest, opts ...grpc.CallOption) (*Bool, error)
	ListUserTrip(ctx context.Context, in *Int, opts ...grpc.CallOption) (*ListUserTripResponse, error)
	UserRegisterTrip(ctx context.Context, in *TakeTripRequest, opts ...grpc.CallOption) (*Bool, error)
	CancelTrip(ctx context.Context, in *Int, opts ...grpc.CallOption) (*Bool, error)
}

type carClient struct {
	cc *grpc.ClientConn
}

func NewCarClient(cc *grpc.ClientConn) CarClient {
	return &carClient{cc}
}

func (c *carClient) RegisterTrip(ctx context.Context, in *RegisterTripRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/registerTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) RegisterCar(ctx context.Context, in *CarObject, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/registerCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) ListMyCar(ctx context.Context, in *Int, opts ...grpc.CallOption) (*ListCarResponse, error) {
	out := new(ListCarResponse)
	err := c.cc.Invoke(ctx, "/grpcproto.car/listMyCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) UpdateCar(ctx context.Context, in *CarObject, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/updateCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) DeleteCar(ctx context.Context, in *DeleteCarRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/deleteCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) ListDriverTrip(ctx context.Context, in *ListDriverTripRequest, opts ...grpc.CallOption) (*ListDriverTripResponse, error) {
	out := new(ListDriverTripResponse)
	err := c.cc.Invoke(ctx, "/grpcproto.car/listDriverTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) FindPendingTrip(ctx context.Context, in *FindPendingTripRequest, opts ...grpc.CallOption) (*ListUserTripResponse, error) {
	out := new(ListUserTripResponse)
	err := c.cc.Invoke(ctx, "/grpcproto.car/findPendingTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) DriverTakeTrip(ctx context.Context, in *DriverTakeTripRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/driverTakeTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) MarkUserTripDone(ctx context.Context, in *Int, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/markUserTripDone", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) FindTrip(ctx context.Context, in *FindTripRequest, opts ...grpc.CallOption) (*JsonResponse, error) {
	out := new(JsonResponse)
	err := c.cc.Invoke(ctx, "/grpcproto.car/findTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) TakeTrip(ctx context.Context, in *TakeTripRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/takeTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) ListUserTrip(ctx context.Context, in *Int, opts ...grpc.CallOption) (*ListUserTripResponse, error) {
	out := new(ListUserTripResponse)
	err := c.cc.Invoke(ctx, "/grpcproto.car/listUserTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) UserRegisterTrip(ctx context.Context, in *TakeTripRequest, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/userRegisterTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *carClient) CancelTrip(ctx context.Context, in *Int, opts ...grpc.CallOption) (*Bool, error) {
	out := new(Bool)
	err := c.cc.Invoke(ctx, "/grpcproto.car/CancelTrip", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CarServer is the server API for Car service.
type CarServer interface {
	// driver
	RegisterTrip(context.Context, *RegisterTripRequest) (*Bool, error)
	RegisterCar(context.Context, *CarObject) (*Bool, error)
	ListMyCar(context.Context, *Int) (*ListCarResponse, error)
	UpdateCar(context.Context, *CarObject) (*Bool, error)
	DeleteCar(context.Context, *DeleteCarRequest) (*Bool, error)
	ListDriverTrip(context.Context, *ListDriverTripRequest) (*ListDriverTripResponse, error)
	FindPendingTrip(context.Context, *FindPendingTripRequest) (*ListUserTripResponse, error)
	DriverTakeTrip(context.Context, *DriverTakeTripRequest) (*Bool, error)
	MarkUserTripDone(context.Context, *Int) (*Bool, error)
	// user
	FindTrip(context.Context, *FindTripRequest) (*JsonResponse, error)
	TakeTrip(context.Context, *TakeTripRequest) (*Bool, error)
	ListUserTrip(context.Context, *Int) (*ListUserTripResponse, error)
	UserRegisterTrip(context.Context, *TakeTripRequest) (*Bool, error)
	CancelTrip(context.Context, *Int) (*Bool, error)
}

func RegisterCarServer(s *grpc.Server, srv CarServer) {
	s.RegisterService(&_Car_serviceDesc, srv)
}

func _Car_RegisterTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).RegisterTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/RegisterTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).RegisterTrip(ctx, req.(*RegisterTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_RegisterCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).RegisterCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/RegisterCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).RegisterCar(ctx, req.(*CarObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_ListMyCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).ListMyCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/ListMyCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).ListMyCar(ctx, req.(*Int))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_UpdateCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CarObject)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).UpdateCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/UpdateCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).UpdateCar(ctx, req.(*CarObject))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_DeleteCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).DeleteCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/DeleteCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).DeleteCar(ctx, req.(*DeleteCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_ListDriverTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDriverTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).ListDriverTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/ListDriverTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).ListDriverTrip(ctx, req.(*ListDriverTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_FindPendingTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindPendingTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).FindPendingTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/FindPendingTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).FindPendingTrip(ctx, req.(*FindPendingTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_DriverTakeTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DriverTakeTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).DriverTakeTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/DriverTakeTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).DriverTakeTrip(ctx, req.(*DriverTakeTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_MarkUserTripDone_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).MarkUserTripDone(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/MarkUserTripDone",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).MarkUserTripDone(ctx, req.(*Int))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_FindTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).FindTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/FindTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).FindTrip(ctx, req.(*FindTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_TakeTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TakeTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).TakeTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/TakeTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).TakeTrip(ctx, req.(*TakeTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_ListUserTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).ListUserTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/ListUserTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).ListUserTrip(ctx, req.(*Int))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_UserRegisterTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TakeTripRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).UserRegisterTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/UserRegisterTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).UserRegisterTrip(ctx, req.(*TakeTripRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Car_CancelTrip_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Int)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CarServer).CancelTrip(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcproto.car/CancelTrip",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CarServer).CancelTrip(ctx, req.(*Int))
	}
	return interceptor(ctx, in, info, handler)
}

var _Car_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcproto.car",
	HandlerType: (*CarServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "registerTrip",
			Handler:    _Car_RegisterTrip_Handler,
		},
		{
			MethodName: "registerCar",
			Handler:    _Car_RegisterCar_Handler,
		},
		{
			MethodName: "listMyCar",
			Handler:    _Car_ListMyCar_Handler,
		},
		{
			MethodName: "updateCar",
			Handler:    _Car_UpdateCar_Handler,
		},
		{
			MethodName: "deleteCar",
			Handler:    _Car_DeleteCar_Handler,
		},
		{
			MethodName: "listDriverTrip",
			Handler:    _Car_ListDriverTrip_Handler,
		},
		{
			MethodName: "findPendingTrip",
			Handler:    _Car_FindPendingTrip_Handler,
		},
		{
			MethodName: "driverTakeTrip",
			Handler:    _Car_DriverTakeTrip_Handler,
		},
		{
			MethodName: "markUserTripDone",
			Handler:    _Car_MarkUserTripDone_Handler,
		},
		{
			MethodName: "findTrip",
			Handler:    _Car_FindTrip_Handler,
		},
		{
			MethodName: "takeTrip",
			Handler:    _Car_TakeTrip_Handler,
		},
		{
			MethodName: "listUserTrip",
			Handler:    _Car_ListUserTrip_Handler,
		},
		{
			MethodName: "userRegisterTrip",
			Handler:    _Car_UserRegisterTrip_Handler,
		},
		{
			MethodName: "CancelTrip",
			Handler:    _Car_CancelTrip_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "car.proto",
}

func init() { proto.RegisterFile("car.proto", fileDescriptor_car_4333042923ea9a97) }

var fileDescriptor_car_4333042923ea9a97 = []byte{
	// 1089 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x56, 0xcd, 0x6e, 0xe4, 0x44,
	0x10, 0x96, 0x3d, 0xe3, 0xc9, 0xb8, 0x26, 0x99, 0x44, 0xbd, 0x49, 0xb0, 0xcc, 0x6a, 0x19, 0xac,
	0x68, 0x35, 0x02, 0x11, 0x44, 0x16, 0x69, 0x85, 0x38, 0x44, 0x22, 0xb3, 0x42, 0x11, 0x20, 0xa2,
	0xde, 0xcd, 0x03, 0x74, 0xec, 0xce, 0x6c, 0xef, 0xda, 0xee, 0xa1, 0xdd, 0x13, 0x91, 0xd7, 0x80,
	0x1b, 0x57, 0x9e, 0x81, 0xc7, 0xe0, 0x11, 0x78, 0x08, 0x4e, 0x5c, 0x51, 0x77, 0xfb, 0xa7, 0x6d,
	0xcf, 0x26, 0x41, 0xe2, 0xb0, 0x37, 0x57, 0x75, 0xb9, 0xea, 0xab, 0xaa, 0xaf, 0xaa, 0x1b, 0xfc,
	0x98, 0x88, 0xe3, 0x95, 0xe0, 0x92, 0x23, 0x7f, 0x29, 0x56, 0xb1, 0xfe, 0x0c, 0xa7, 0x4b, 0xca,
	0x33, 0x2a, 0xc5, 0xad, 0x39, 0x0a, 0xb7, 0x63, 0x9e, 0x65, 0x3c, 0x2f, 0xa5, 0x69, 0x46, 0x25,
	0x49, 0x88, 0x24, 0x46, 0x8e, 0x7e, 0x75, 0xe1, 0x91, 0xa0, 0x4b, 0x56, 0x48, 0x2a, 0x5e, 0x09,
	0xb6, 0xc2, 0xf4, 0xa7, 0x35, 0x2d, 0x24, 0xda, 0x07, 0x2f, 0x26, 0xe2, 0x7c, 0x11, 0x38, 0x33,
	0x67, 0x3e, 0xc0, 0x46, 0x40, 0x4f, 0x61, 0x7a, 0x45, 0x97, 0x2c, 0xff, 0x9e, 0x92, 0x1b, 0xfa,
	0x8a, 0x65, 0x34, 0x70, 0xf5, 0x71, 0x47, 0x8b, 0x22, 0xd8, 0xa6, 0x79, 0xd2, 0x58, 0x0d, 0xb4,
	0x55, 0x4b, 0x87, 0x8e, 0x60, 0x78, 0x2d, 0x78, 0x16, 0x0c, 0x67, 0xce, 0x7c, 0x72, 0xb2, 0x77,
	0x5c, 0x67, 0x70, 0xbc, 0xe2, 0x2c, 0x97, 0x58, 0x9f, 0xa2, 0x19, 0xb8, 0x92, 0x07, 0xde, 0x3b,
	0x6c, 0x5c, 0xc9, 0xd1, 0x0c, 0x26, 0x19, 0xf9, 0x79, 0xc1, 0x0a, 0x49, 0xf2, 0x98, 0x06, 0xa3,
	0x99, 0x33, 0x77, 0xb1, 0xad, 0x42, 0x8f, 0xc1, 0xbf, 0xa6, 0xf4, 0x05, 0x89, 0x5f, 0x7f, 0x97,
	0x05, 0x5b, 0x1a, 0x4a, 0xa3, 0x40, 0x08, 0x86, 0x05, 0x25, 0x32, 0x18, 0xcf, 0x9c, 0xb9, 0x87,
	0xf5, 0x77, 0xf4, 0xa7, 0x03, 0xbb, 0xd7, 0x2c, 0x4f, 0xec, 0x8a, 0xf4, 0x73, 0x77, 0x1e, 0x94,
	0xbb, 0x7b, 0x47, 0xee, 0x83, 0x07, 0xe4, 0x3e, 0xbc, 0x23, 0x77, 0x04, 0x43, 0x79, 0xbb, 0xa2,
	0xba, 0x3e, 0x1e, 0xd6, 0xdf, 0x75, 0x3e, 0x23, 0x2b, 0x9f, 0xdf, 0x1d, 0x4d, 0x96, 0x1f, 0xaf,
	0xde, 0xd0, 0x58, 0xa2, 0x29, 0xb8, 0x2c, 0xd1, 0xe8, 0x3d, 0xec, 0xb2, 0x44, 0x21, 0x4e, 0x59,
	0x4c, 0xf3, 0x82, 0x5e, 0xa4, 0x44, 0x1a, 0xc4, 0x3e, 0x6e, 0xe9, 0x34, 0x1f, 0x78, 0xca, 0x85,
	0x86, 0xec, 0x63, 0x23, 0x28, 0x6d, 0xc6, 0x13, 0x9a, 0x6a, 0x90, 0x3e, 0x36, 0x82, 0xf2, 0x77,
	0x43, 0x5f, 0xb3, 0x38, 0xa5, 0xdf, 0x08, 0x92, 0x27, 0x1a, 0x9d, 0x8f, 0x5b, 0xba, 0x8d, 0x28,
	0xbf, 0x86, 0xdd, 0x94, 0x15, 0xf2, 0x8c, 0x08, 0x4c, 0x8b, 0x15, 0xcf, 0x0b, 0x8a, 0xe6, 0x30,
	0x8c, 0x89, 0x28, 0x02, 0x67, 0x36, 0x98, 0x4f, 0x4e, 0xf6, 0xad, 0x22, 0xd4, 0xe9, 0x60, 0x6d,
	0x11, 0xfd, 0xed, 0xc0, 0xae, 0x24, 0x6f, 0xa9, 0xdd, 0xb2, 0x08, 0xb6, 0x13, 0xc1, 0x6e, 0x0c,
	0xb3, 0x4b, 0x2e, 0x7b, 0xb8, 0xa5, 0x7b, 0x2f, 0x29, 0xbd, 0xa1, 0x38, 0x75, 0xab, 0xb7, 0x9a,
	0x56, 0x47, 0xbf, 0x0d, 0x60, 0xbc, 0x2e, 0x4c, 0x2a, 0xbd, 0xae, 0xfe, 0x9f, 0x89, 0x21, 0x2b,
	0x31, 0xbf, 0x4c, 0x63, 0x5a, 0xa7, 0xe1, 0x6b, 0xd0, 0xfb, 0xe0, 0x15, 0x52, 0xd1, 0xc7, 0xa0,
	0x36, 0x02, 0x3a, 0x86, 0x91, 0x29, 0xb7, 0x06, 0x3e, 0x39, 0x39, 0xb4, 0x12, 0x56, 0xd0, 0x2f,
	0x04, 0xbf, 0x66, 0x29, 0xc5, 0xa5, 0x15, 0x7a, 0x0a, 0x83, 0x98, 0x08, 0x3d, 0x8c, 0xef, 0xea,
	0xb7, 0x32, 0x50, 0xd1, 0x56, 0x82, 0xc5, 0x34, 0xf0, 0xcd, 0x7e, 0xd2, 0x02, 0x0a, 0x61, 0x9c,
	0x54, 0x8b, 0x00, 0xf4, 0x22, 0xa8, 0x65, 0xf4, 0x09, 0x0c, 0x55, 0xc0, 0x60, 0x72, 0x27, 0x0e,
	0x6d, 0xa3, 0xfd, 0xac, 0x05, 0x91, 0x8c, 0xe7, 0xc1, 0x76, 0xe9, 0xa7, 0x94, 0xeb, 0x46, 0xec,
	0x6c, 0x98, 0xb9, 0xa9, 0xc5, 0xe6, 0x6f, 0x61, 0x5f, 0xb1, 0xf9, 0xb2, 0xa8, 0x16, 0x6b, 0x49,
	0xe9, 0xcf, 0x9b, 0x9e, 0x95, 0xb4, 0x7e, 0xd4, 0xc1, 0xa2, 0xcd, 0x6b, 0xa3, 0xe8, 0x08, 0xf6,
	0x12, 0x9a, 0x52, 0x49, 0xf5, 0x60, 0x18, 0x66, 0xef, 0xc1, 0x80, 0x25, 0x66, 0x2c, 0x3c, 0xac,
	0x3e, 0xa3, 0x3f, 0x06, 0x00, 0x0d, 0xb1, 0xd1, 0x17, 0xe0, 0x57, 0x0e, 0x8a, 0xbb, 0xc2, 0x34,
	0x56, 0xef, 0x09, 0x61, 0x1e, 0x83, 0x2f, 0xb9, 0x24, 0xe9, 0x4b, 0x55, 0x4f, 0x43, 0xf6, 0x46,
	0xa1, 0x62, 0x0b, 0x4a, 0x32, 0xc2, 0xf2, 0xe5, 0xcb, 0x66, 0x69, 0xb7, 0x74, 0x15, 0x85, 0xfc,
	0xfb, 0x28, 0x34, 0x83, 0x89, 0x66, 0x4d, 0x79, 0x31, 0x80, 0x76, 0x65, 0xab, 0xd0, 0x11, 0xec,
	0xe8, 0xd0, 0x55, 0x0f, 0x35, 0x17, 0x3c, 0xdc, 0x56, 0x2a, 0x3f, 0x5a, 0x71, 0x9e, 0xc7, 0x3c,
	0x33, 0xbc, 0x18, 0x60, 0x5b, 0xd5, 0xa2, 0xe5, 0xb4, 0x4d, 0xcb, 0xe8, 0x05, 0x1c, 0x2a, 0x9a,
	0x2c, 0xea, 0xd6, 0xd5, 0x44, 0xf9, 0x14, 0x3c, 0x69, 0xb5, 0xef, 0xc0, 0xca, 0xa4, 0x69, 0x34,
	0x36, 0x36, 0x11, 0x85, 0x83, 0xae, 0x9b, 0xfa, 0x22, 0x37, 0x55, 0x76, 0x3a, 0x55, 0x2e, 0x24,
	0x11, 0x72, 0x51, 0xed, 0x7b, 0x0f, 0x37, 0x0a, 0x14, 0xc0, 0x16, 0xcd, 0x13, 0x7d, 0x36, 0xd0,
	0x67, 0x95, 0x18, 0xfd, 0xe2, 0xc0, 0xa1, 0xba, 0x18, 0x2f, 0x68, 0x9e, 0xb0, 0x7c, 0x69, 0x07,
	0xaa, 0x66, 0xc0, 0xd9, 0xb0, 0xb4, 0x5c, 0x6b, 0x56, 0x42, 0x18, 0xa7, 0x44, 0x32, 0xb9, 0x4e,
	0x68, 0x79, 0x99, 0xd4, 0xb2, 0x82, 0x95, 0xf2, 0x7c, 0x69, 0x0e, 0x0d, 0x77, 0x1a, 0x05, 0x3a,
	0x84, 0x91, 0x20, 0x09, 0x5b, 0x17, 0x9a, 0x44, 0x2e, 0x2e, 0xa5, 0xe8, 0x2f, 0x07, 0x0e, 0xca,
	0x8a, 0x74, 0x2e, 0x80, 0x23, 0xd8, 0x11, 0x54, 0x31, 0xa3, 0xe2, 0x8b, 0x01, 0xd7, 0x56, 0x76,
	0x89, 0xe0, 0xf6, 0x89, 0xf0, 0x04, 0xa0, 0x9a, 0x93, 0xf3, 0x45, 0x59, 0x13, 0x4b, 0xa3, 0xe2,
	0x54, 0xd2, 0x85, 0xde, 0x4a, 0x43, 0x13, 0xa7, 0xa5, 0xec, 0xbe, 0x54, 0xbc, 0xfe, 0x4b, 0xa5,
	0x7e, 0x75, 0x95, 0x23, 0xa1, 0x85, 0x93, 0x7f, 0x46, 0x9a, 0xd1, 0xe8, 0x54, 0x91, 0xbf, 0x79,
	0xaa, 0xa1, 0x27, 0x16, 0x23, 0x36, 0xbc, 0xe1, 0xc2, 0x5d, 0xeb, 0xfc, 0x8a, 0xf3, 0x14, 0x7d,
	0x09, 0x93, 0xca, 0xee, 0x4c, 0xed, 0xd0, 0x4d, 0xb3, 0xd1, 0xff, 0xeb, 0x39, 0xf8, 0x8a, 0x5a,
	0x3f, 0xdc, 0xaa, 0x7f, 0xa6, 0xd6, 0x29, 0xcb, 0x65, 0x18, 0x5a, 0x72, 0xf7, 0xf2, 0x3e, 0x01,
	0x7f, 0xbd, 0x4a, 0x88, 0x5e, 0x5c, 0x0f, 0x0d, 0xf6, 0x15, 0xf8, 0xf5, 0xb2, 0x43, 0x1f, 0xda,
	0x94, 0xef, 0xac, 0xc0, 0xfe, 0xaf, 0x97, 0x30, 0x6d, 0x8f, 0x00, 0x9a, 0x75, 0xc0, 0xf5, 0xa6,
	0x23, 0xfc, 0xf8, 0x0e, 0x8b, 0x32, 0x8b, 0x4b, 0xf3, 0x14, 0xb4, 0x18, 0x8f, 0xec, 0xbf, 0x36,
	0x4f, 0x43, 0xf8, 0x51, 0xc7, 0x71, 0xef, 0x1a, 0x38, 0x83, 0x69, 0x9b, 0xb3, 0x2d, 0xb4, 0x1b,
	0xe9, 0xdc, 0x4f, 0xf9, 0x19, 0xec, 0x65, 0x44, 0xbc, 0xad, 0x9c, 0x2f, 0x78, 0x4e, 0x7b, 0x1d,
	0xea, 0xfd, 0x74, 0x0a, 0xe3, 0xea, 0x6d, 0x8b, 0xc2, 0x4e, 0x26, 0x76, 0xb4, 0x0f, 0xac, 0xb3,
	0x37, 0x05, 0xcf, 0x6b, 0xe8, 0xcf, 0x61, 0x5c, 0xbd, 0xb4, 0x5a, 0x0e, 0xe4, 0x7d, 0x70, 0x4f,
	0xd5, 0x43, 0xb3, 0xa9, 0x45, 0x0f, 0xea, 0xbd, 0x45, 0x3b, 0x85, 0x3d, 0x35, 0x52, 0xd8, 0x9e,
	0x82, 0xff, 0x84, 0xe0, 0x33, 0x80, 0x33, 0x35, 0x69, 0xe9, 0xc6, 0xf8, 0x5d, 0xf3, 0xab, 0x91,
	0xfe, 0x7e, 0xf6, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xfa, 0xac, 0xa2, 0x14, 0x6a, 0x0d, 0x00,
	0x00,
}
